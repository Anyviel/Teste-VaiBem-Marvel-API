{"version":3,"sources":["api/marvelApi.js","components/comicList/style.js","components/comicList/cardItem.jsx","components/comicList/cardList.jsx","components/comicList/index.js","components/search/search.jsx","components/navBar/style.js","components/navBar/index.js","components/navBar/navBar.jsx","pages/home/index.js","pages/home/home.jsx","pages/character/style.js","pages/character/character.jsx","pages/character/index.js","Router.js","App/App.js","index.js"],"names":["dotenv","config","path","getCredentials","publicKey","process","ts","Date","now","hash","md5","marvelApi","getCharacters","a","page","name","search","fetch","response","json","responseData","data","results","getCharacter","id","useStyles","makeStyles","root","maxWidth","media","height","cardBg","background","cardTitle","fontSize","lineHeight","textAlign","color","cardBtnBg","justifyContent","cardBtn","paddingRight","paddingLeft","border","CardItem","values","classes","history","useHistory","handleClick","push","Grid","item","xs","sm","md","lg","xl","Card","className","CardActionArea","CardMedia","image","thumbnail","extension","title","onClick","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","size","container","marginTop","CardList","items","spacing","map","comic","theme","padding","display","alignItems","width","input","marginLeft","flex","iconButton","divider","margin","Search","onSearch","Paper","InputBase","placeholder","inputProps","onChange","Divider","orientation","IconButton","aria-label","flexGrow","menuButton","marginRight","fontWeight","fontFamily","textDecoration","navBg","space","NavBar","showSearch","AppBar","position","Container","Toolbar","edge","to","Home","useState","setLoading","setPage","characters","setCharacters","setSearch","console","error","onLoad","useEffect","useDebouncedEffect","e","target","value","dataLength","Math","ceil","length","next","hasMore","loader","endMessage","flexWrap","paper","heroBg","heroImg","maxHeight","borderRadius","heroInf","heroName","letterSpacing","marginBottom","heroDsc","Character","useParams","character","setCharacter","getChar","elevation","src","style","description","Routes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.965a4321.chunk.js","sourcesContent":["import dotenv from 'dotenv';\nimport md5 from 'md5';\n\ndotenv.config(); // Permite a utilização das ENVS para armazenar dados sigilosos\n\nconst path = 'http://gateway.marvel.com/v1/public'; \n\nconst getCredentials = () => {\n    const publicKey = process.env.REACT_APP_MARVEL_KEY_PUBLIC; //Chamada a Chave Publica necessária para acessar a API da Marvel\n    const privateKey = process.env.REACT_APP_MARVEL_KEY_PRIVATE; //Chamada a Chave Privada necessária para acessar a API da Marvel\n\n    const ts = Date.now(); //Gera o Timestamp necessário para gerar a Hash\n    const hash = md5(`${ts}${privateKey}${publicKey}`); //Gera a Hash utilizando o MD5\n\n    return `apikey=${publicKey}&ts=${ts}&hash=${hash}`;\n}\n\nconst marvelApi = {\n    getCharacters: async (page = 0, name = '') => {\n        let search = '';\n\n        if (name !== ''){\n            search = `&nameStartsWith=${name}`\n        }\n\n        const response = await fetch(`${path}/characters?${getCredentials()}&offset=${page}${search}`);\n        const responseData = await response.json();\n\n        return responseData?.data?.results;\n    },\n    getCharacter: async (id) => {\n        const response = await fetch(`${path}/characters/${id}?${getCredentials()}`)\n        const responseData = await response.json();\n\n        return responseData?.data.results[0];\n    }\n}\n\nexport default marvelApi;\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n      maxWidth: 340,\r\n  },\r\n  media: {\r\n      height: 260,\r\n  },\r\n  cardBg: {\r\n      background: '#3a3837',\r\n  },\r\n  cardTitle: {\r\n      fontSize: '1.5em',\r\n      lineHeight: '0.9em',\r\n      textAlign: 'center',\r\n      color: '#fff'\r\n  },\r\n  cardBtnBg: {\r\n      background: '#1f1f1f',\r\n      justifyContent: 'center'\r\n  },\r\n  cardBtn: {\r\n      color: '#fff',\r\n      paddingRight: 15,\r\n      paddingLeft: 15,\r\n      border: '1px solid #fff'\r\n  }\r\n});\r\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Grid, Typography } from '@material-ui/core';\nimport { useStyles } from './style';\n\nconst CardItem = ({ values }) => {\n    const classes = useStyles();\n\n    let history = useHistory();\n\n    function handleClick() { // Captura o ID do personagem selecionado dentro da Home e manda para a '/char-info'\n        history.push(`/char-info/${values.id}`); \n    }\n\n    return (\n        <Grid item xs={12} sm={6} md={4} lg={3} xl={3} >\n\n            <Card className={classes.root}>\n                <CardActionArea>\n                    <CardMedia\n                        className={classes.media}\n                        image={`${values?.thumbnail?.path}.${values?.thumbnail?.extension}`}\n                        title={values?.name}\n                        onClick={handleClick}\n                    />\n                    <CardContent className={classes.cardBg}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.cardTitle}>\n                            {values?.name}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions className={classes.cardBtnBg}>\n                    <Button size=\"small\" color=\"secondary\" className={classes.cardBtn} onClick={handleClick}>\n                        Saiba mais\n                    </Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default CardItem;\n","import React from 'react';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport CardItem from './cardItem';\n\nconst useStyles = makeStyles({\n    container: {\n        marginTop: 16\n    }\n})\n\nconst CardList = ({ items }) => {\n\n    const classes = useStyles();\n\n    return (\n        <Grid className={classes.container} container spacing={3}>\n            {items?.map(comic => // Mapeia e imprime cada personagem presente na API (Num total de 20 por requisição)\n            <CardItem values={comic} key={comic.id} />\n            )}\n        </Grid>\n    )\n}\n\nexport default CardList;\n","import CardList from './cardList';\n\nexport default CardList;","import React from 'react';\n\nimport { Divider, IconButton, InputBase, makeStyles, Paper } from '@material-ui/core';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n// import DirectionsIcon from '@material-ui/icons/Directions';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 400,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n}));\n\nconst Search = ({ onSearch }) => {\n    const classes = useStyles();\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <InputBase\n                className={classes.input}\n                placeholder=\"Buscar Personagens\"\n                inputProps={{ 'aria-label': 'Buscar Personagens' }}\n                onChange={onSearch}\n            />\n            <Divider className={classes.divider} orientation=\"vertical\" />\n            <IconButton className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n        </Paper>\n    )\n}\n\nexport default Search;\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport 'fontsource-roboto';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    fontSize: 36,\r\n    fontWeight: 500,\r\n    fontFamily: ['Roboto'],\r\n    color: '#fff',\r\n    textDecoration: 'none',\r\n  },\r\n  navBg: {\r\n    background: '#ED1D24',\r\n  },\r\n  space: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingLeft: 0,\r\n    paddingRight: 0\r\n  },\r\n}));\r\n\r\n","import NavBar from './navBar';\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {useStyles} from './style';\r\nimport Search from '../search/search';\r\nimport { Container } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NavBar({ onSearch, showSearch }) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.navBg}>\r\n        <Container maxWidth=\"lg\">\r\n          <Toolbar className={classes.space}>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <Link to='/' className={classes.title}>Marvel Searcher</Link >\r\n            </IconButton>\r\n            {showSearch && <Search onSearch={onSearch} />}\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}","import Home from './home';\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport marvelApi from '../../api/marvelApi';\n\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport useDebouncedEffect  from 'use-debounced-effect';\n\nimport CardList from '../../components/comicList';\nimport Search from '../../components/search/search';\n\nimport { Container } from '@material-ui/core';\nimport './style.css'\nimport NavBar from '../../components/navBar';\n\nconst Home = () => {\n\n    const [loading, setLoading] = useState(false);\n    const [page, setPage] = useState(0);\n    const [characters, setCharacters] = useState([]);\n    const [search, setSearch] = useState('');\n\n    const pageSize = 20;\n\n    const getCharacters = async () => { // Uma Função Assíncrona para acessar os personagens da API em forma de Lista\n        setLoading(true);\n        try {\n            const data = await marvelApi.getCharacters(page * pageSize, search); \n\n            // console.log(data)\n            setCharacters([...characters, ...data]);\n            setLoading(false);\n        } catch (err) {\n            console.error(err);\n        }\n        setLoading(false);\n    }\n\n    const handleSearch = (e) => { // Função que permite buscar os personagens da API através do Nome\n        setSearch(e.target.value);\n        setCharacters([]); // Limpa a Lista inicial e se atualiza com os valores da busca\n        setPage(0); //Após a busca ser limpa, retorna a lista no valor incial\n    }\n\n    const onLoad = () => {\n        getCharacters();\n    }\n\n    useEffect(onLoad, [page]);\n\n    useDebouncedEffect(onLoad, 500, [search]); // O Debounced é utilizado para que a função 'handleSearch' seja executada após o usuário ter terminado sua digitação\n\n    return (\n        <>\n            <NavBar onSearch={handleSearch} showSearch />\n            <Container maxWidth=\"lg\">\n                {/* <Search onSearch={handleSearch} /> */}\n                <InfiniteScroll \n                dataLength={Math.ceil(characters.length / pageSize)}\n                next={() => {\n                    setPage(page + 1)\n                }}\n                hasMore={true}\n                loader={<h4>Carregando...</h4>}\n                endMessage={<p></p>}\n                >\n                    <CardList items={characters} />\n                </InfiniteScroll>\n            </Container>\n        </>\n    )\n}\n\nexport default Home;\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    marginTop: 16,\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    background: '#f5f5f5',\r\n  },\r\n  heroBg: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    background: '#2d3238'\r\n  },\r\n  heroImg: {\r\n    maxWidth: 300,\r\n    height: '100%',\r\n    maxHeight: 300,\r\n    borderRadius: '50%',\r\n    border: '3px solid #000'\r\n  },\r\n  heroInf: {\r\n    marginRight: 15,\r\n    marginLeft: 15,\r\n    marginTop: 20\r\n  },\r\n  heroName: {\r\n    fontSize: 18,\r\n    letterSpacing: 0.9,\r\n    marginBottom: 5,\r\n  },\r\n  heroDsc: {\r\n    fontSize: 16,\r\n    letterSpacing: 0.5,\r\n    marginBottom: 5,\r\n  },\r\n}));","import React, {useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport marvelApi from '../../api/marvelApi';\r\n\r\nimport NavBar from '../../components/navBar';\r\nimport { Container, Grid, Paper, Typography } from '@material-ui/core';\r\nimport { useStyles } from './style';\r\n\r\nfunction Character() {\r\n\r\n  const { id } = useParams(); //Função do React-Router-Dom para garantir a identificação de cada personagem\r\n\r\n  const classes = useStyles();\r\n\r\n  const [character, setCharacter] = useState([]);\r\n\r\n  const getChar = async () => { // Uma Função Assíncrona para acessar os personagens da API de forma individual\r\n    try {\r\n      const data = await marvelApi.getCharacter(id);\r\n      // console.log(data);\r\n\r\n      setCharacter(data);\r\n    } \r\n    catch (err) {\r\n      console.error(err); //Em caso de algum erro durante o carregamento das informações da API\r\n    }\r\n  }\r\n\r\n  const onLoad = () => { //Inicia a Função no momento que os dados são carregados.\r\n    getChar();\r\n  }\r\n\r\n  useEffect(onLoad, [])\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Container maxWidth=\"lg\">\r\n        <div className={classes.root}>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={6} md={4} lg={3} xl={3} className={classes.heroBg}>\r\n                <img className={classes.heroImg} src={`${character?.thumbnail?.path}.${character?.thumbnail?.extension}`}/>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={8} lg={9} xl={9}>\r\n                <Grid container style={{margin:0}} spacing={1}>\r\n                  <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className={classes.heroInf}>\r\n                    <Typography className={classes.heroName}>\r\n                      <b>Nome: </b>{character?.name}\r\n                    </Typography>\r\n                    <Typography className={classes.heroDsc}>\r\n                      <b>Descrição: </b>\r\n                      {character?.description ? character?.description : 'Descrição não disponível.'}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Character;","import Character from './character';\r\n\r\nexport default Character;\r\n\r\n// O Código é importado para dentro do Index para melhor navegação,\r\n// assim como a identificação dos arquivos de cada pasta com os arquivos .jsx","import React from \"react\";\r\nimport Home from './pages/home';\r\nimport Character from './pages/character';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\"; // Biblioteca para gerenciar o 'caminho' entre as páginas\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/char-info/:id\"> {/* Página para informações dos personagens */}\r\n            <Character />\r\n          </Route>\r\n          <Route path=\"/\"> {/* É a Página inicial do Projeto */}\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}","import React from 'react';\nimport Routes from '../Router';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport './global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}